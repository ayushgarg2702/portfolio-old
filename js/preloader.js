window.onload = function() {
    class segm {
        constructor(x, y, l, fi, se) {
            // this.fi = Math.random() * 1.9 + 0.1;
            // this.se = Math.random() * 2 * Math.PI;
            this.b = fi;
            this.x0 = x;
            this.y0 = y;
            this.a = se;
            this.x1 = this.x0 + l * Math.cos(this.a);
            this.y1 = this.y0 + l * Math.sin(this.a);
            this.l = l;
            // console.log(this.se)
            // console.log(this.se)
        }
        update(x, y) {
            this.x0 = x;
            this.y0 = y;
            this.a = Math.atan2(this.y1 - this.y0, this.x1 - this.x0);
            this.x1 = this.x0 + this.l * Math.cos(this.a);
            this.y1 = this.y0 + this.l * Math.sin(this.a);
        }
    }
    class rope {
        constructor(tx, ty, l, b, slq) {
            //console.log("3")
            this.res = l / slq;
            this.l = l;
            this.segm = [];
            this.sec = [3.27702476459976,
                1.4361737982496278,
                1.310217055018535,
                3.8115158814257626,
                1.9688081596966107,
                1.0412133377176565,
                1.8031740308967007,
                3.2583935722921096,
                5.923664052195655,
                6.073535157783199,
                1.16706159578944932,
                1.1955603236533263,
                1.1202622062343246,
                1.5037416870079197,
                2.4754176447021052,
                5.054895566373397,
                5.179551651916961,
                1.7622109409507836,
                1.2913848505089047,
                1.8775426460025136,
                5.520655267647968,
                2.7986308706346126,
                5.825618236742199,
                5.940923653899118,
                1.4168847914074723,
                5.385520591488437,
                1.2428352591125396,
                1.3145431313154222,
                1.9782056200730607,
                3.0643813838893026,
                5.504070470586189,
                2.6986354350167887,
                3.3786240166491255,
                5.952936133760631,
                3.9428690592549427,
                1.5419311419551616,
                5.204976045343178,
                5.221371928214859,
                4.893665197963697,
                6.100174897193476,
                5.731629210630977,
                4.1832185881043324,
                4.612122190631103,
                5.998446788445656,
                1.08533914171231986,
                3.6600529801923796,
                1.514435220293618,
                1.06063157480936147,
                3.5617367560138047,
                4.618669483907005,
                1.8557215743185635,
                2.1993327310159825,
                5.413117701130491,
                2.061749437163469,
                2.456881396965878,
                5.5087226097678235,
                4.763530368378195,
                3.2541429902489463,
                4.789732562901407,
                3.894664754565206,
                5.090895424499674,
                2.4969283929058994,
                1.515051833272174,
                4.029848298844582,
                1.5792999451959109,
                1.6586653667144828,
                4.674175718335432,
                5.165541125785843,
                1.38164018040500075,
                4.5758552561514465,
                4.683533246588836,
                1.491673099000448,
                4.378214933350957,
                5.623259179873821,
                1.05325814515139345,
                5.131043055829684,
                4.802971043841187,
                3.0809295815549707,
                1.8382272689122596,
                3.0102929640449863,
                5.133194725023409,
                4.3297222746507025,
                2.6606867190504055,
                3.7835286149314284,
                5.7239190736049395,
                1.290988103982218,
                2.7586267690228508,
                1.8626317218496815,
                5.913056861238751,
                2.182906261119717,
                1.234228810021849,
                1.202679748250917,
                6.259847354670968,
                1.5917430420134904,
                1.1096774878120537,
                4.328058532477396,
                1.5323239813833717,
                5.105774217898904,
                4.223179746607946,
                3.369349820611298,
                3.8733357349349733,
                1.8557215743185635,
                2.1993327310159825,
                5.413117701130491,
                2.061749437163469,
                2.456881396965878,
                5.5087226097678235,
                4.763530368378195,
                3.2541429902489463,
                4.789732562901407,
                3.894664754565206,
                5.090895424499674,
                2.4969283929058994,
                1.515051833272174,
                4.029848298844582,
                1.5792999451959109,
                1.6586653667144828,
                4.674175718335432,
                5.165541125785843,
                1.38164018040500075,
                4.5758552561514465,
                4.683533246588836,
                1.491673099000448,
                4.378214933350957,
                5.623259179873821,
                1.05325814515139345,
                5.131043055829684,
                4.802971043841187,
                3.0809295815549707,
                1.8382272689122596,
                3.0102929640449863,
                5.133194725023409,
                4.3297222746507025,
                2.6606867190504055,
                3.7835286149314284,
                5.7239190736049395,
                1.290988103982218,
                2.7586267690228508,
                1.8626317218496815,
                5.913056861238751,
                2.182906261119717,
                1.234228810021849,
                1.202679748250917,
                6.259847354670968,
                1.5917430420134904,
                1.1096774878120537,
                4.328058532477396,
                1.5323239813833717,
                5.105774217898904,
                4.223179746607946,
                3.369349820611298]
            this.fis = [0.7058378817519344,
                1.3277450592794091,
                0.9046081869447689,
                1.5928366167306478,
                0.12823547195342816,
                1.3670823676078379,
                0.3917072715083614,
                0.775486035021258,
                1.6015951932837704,
                1.5558525055375914,
                1.2734762669886326,
                1.5730966564991256,
                1.5754792197926883,
                0.4406306593728623,
                0.9343336730228643,
                0.23388298035428173,
                0.9326382071717628,
                1.8817213294966657,
                1.4216180480841514,
                0.12510308226928385,
                1.9483472001281792,
                0.3076057444190342,
                0.921633182639986,
                1.3768638825874764,
                0.6406411114948425,
                1.6036862075411193,
                1.1866584875555297,
                0.4429306973019881,
                1.2790023012125757,
                1.2252588511472655,
                0.16310240068283582,
                0.9295304407462364,
                0.6728998429434366,
                1.786610881517072,
                1.4964911018389633,
                1.9182880584250415,
                0.8671589061757444,
                0.15285299559890023,
                0.9735537764849561,
                1.8069785832743572,
                1.3303077560920544,
                0.3926777711789403,
                1.8459111289504726,
                1.5215463890764394,
                0.36979385629818484,
                1.415374708348446,
                0.614640045588608,
                0.9225672764110867,
                1.299050179629919,
                1.0012221984634793,
                0.1726092994813732,
                1.9269213505902945,
                1.1201877869757444,
                1.1968238066651689,
                1.5662919586625397,
                0.43144086181357244,
                1.873788426398083,
                1.1177094450442697,
                0.4361873148626386,
                0.11597935545887877,
                0.32895389947120635,
                1.9611008448883571,
                1.7455105207227093,
                1.323644114958805,
                0.8123903151635933,
                1.2398724434726023,
                0.5492477848745826,
                1.3241958090651866,
                1.9762676063722415,
                0.207301814809278,
                1.894043080322012,
                0.30876565571804054,
                1.2156647119671773,
                1.318761100881537,
                1.0464246701812185,
                1.084178794864597,
                1.7564101856274263,
                1.6732781213482,
                0.8108250987337554,
                1.6172773938845357,
                1.5641240913454875,
                1.2729062041551393,
                0.28088171983824906,
                1.7112517094423938,
                0.2681033788113512,
                1.4767891566713423,
                1.30498695303598,
                1.6789196205844075,
                1.373502951828982,
                0.11746760232676233,
                1.8064371008271698,
                0.7781781329681586,
                0.8441100327752377,
                0.18778065187610352,
                0.8165292163441014,
                0.9527247845722975,
                0.9966879544865097,
                0.5851189995101964,
                0.8322642782095241,
                1.4883760091998928,
                1.635148210420582,
                0.1726092994813732,
                1.9269213505902945,
                1.1201877869757444,
                1.1968238066651689,
                1.5662919586625397,
                0.43144086181357244,
                1.873788426398083,
                1.1177094450442697,
                0.4361873148626386,
                0.11597935545887877,
                0.32895389947120635,
                1.9611008448883571,
                1.7455105207227093,
                1.323644114958805,
                0.8123903151635933,
                1.2398724434726023,
                0.5492477848745826,
                1.3241958090651866,
                1.9762676063722415,
                0.207301814809278,
                1.894043080322012,
                0.30876565571804054,
                1.2156647119671773,
                1.318761100881537,
                1.0464246701812185,
                1.084178794864597,
                1.7564101856274263,
                1.6732781213482,
                0.8108250987337554,
                1.6172773938845357,
                1.5641240913454875,
                1.2729062041551393,
                0.28088171983824906,
                1.7112517094423938,
                0.2681033788113512,
                1.4767891566713423,
                1.30498695303598,
                1.6789196205844075,
                1.373502951828982,
                0.11746760232676233,
                1.8064371008271698,
                0.7781781329681586,
                0.8441100327752377,
                0.18778065187610352,
                0.8165292163441014,
                0.9527247845722975,
                0.9966879544865097,
                0.5851189995101964,
                0.8322642782095241,
                1.4883760091998928]
                
            this.segm.push(new segm(tx, ty, this.l / this.res, this.fis[0], this.sec[0]));
            for (let i = 1; i < 150; i++) {
                this.segm.push(
                    new segm(this.segm[i - 1].x1, this.segm[i - 1].y1, this.l / this.res, this.fis[i], this.sec[i])
                );
            }
            this.b = b;
        }
        update(t) {
            this.segm[0].update(t.x, t.y);
            for (let i = 1; i < 150; i++) {
                this.segm[i].update(this.segm[i - 1].x1, this.segm[i - 1].y1);
            }
        }
        show(t) {
            if (t == "l") {
                c.beginPath();
                for (let i = 0; i < this.segm.length; i++) {
                    c.lineTo(this.segm[i].x0, this.segm[i].y0);
                }
                c.lineTo(
                    this.segm[this.segm.length - 1].x1,
                    this.segm[this.segm.length - 1].y1
                );
                c.strokeStyle = "rgba( 255, 255, 255, 0.0 )";
                c.lineWidth = this.b;
                c.stroke();

                c.beginPath();
                c.arc(this.segm[0].x0, this.segm[0].y0, 1, 0, 2 * Math.PI);
                c.fillStyle = "rgba( 255, 255, 255, 0.0 )";
                c.fill();

                c.beginPath();
                c.arc(
                    this.segm[this.segm.length - 1].x1,
                    this.segm[this.segm.length - 1].y1,
                    2,
                    0,
                    2 * Math.PI
                );
                c.fillStyle = "rgba( 255, 255, 255, 0.0 )";
                c.fill();
            } else {
                for (let i = 0; i < this.segm.length; i++) {
                    c.beginPath();
                    c.arc(this.segm[i].x0, this.segm[i].y0, this.segm[i].b, 0, 2 * Math.PI);
                    c.fillStyle = "white";
                    c.fill();
                }
                c.beginPath();
                c.arc(
                    this.segm[this.segm.length - 1].x1,
                    this.segm[this.segm.length - 1].y1,
                    2, 0, 2 * Math.PI
                );
                c.fillStyle = "white";
                c.fill();
            }
        }
    }

    //setting up canvas
    let c = init("canvas").c,
        canvas = init("canvas").canvas,
        w = (canvas.width = window.innerWidth),
        h = (canvas.height = window.innerHeight),
        ropes = [];

    //variables definition
    let nameOfVariable = "value",
        mouse = {},
        last_mouse = {},
        rl = 50,
        randl = [],
        target = {
            x: w / 2,
            y: h / 2
        },
        last_target = {},
        t = 0,
        q = 10,
        da = [],
        type = "l";

    for (let i = 0; i < 50; i++) {
        //console.log("2")
        first = [2104.509326616465,
            2625.32538205976,
            2225.373085064012,
            1948.8043173358676,
            1466.4639131423874,
            1190.6316988533163,
            2422.230526884782,
            2234.3740718890863,
            1396.2180843375208,
            1407.0439249163587,
            993.0031520812602,
            1538.5908737822963,
            2610.389536953986,
            2088.2741501566406,
            2312.213746408592,
            1433.827827228022,
            1805.8354103334,
            1683.2518019591,
            1821.0511782372857,
            1523.0667263385667,
            1138.180547433807,
            2205.334762242625,
            2698.9937572269023,
            2554.446008475566,
            1455.8910350509975,
            2279.466232318949,
            1774.9060984674745,
            924.7306061057897,
            1249.9594986726245,
            1810.897156526516,
            1060.1362004877265,
            1585.130540743807,
            1992.6823708118272,
            1628.2746704173217,
            1834.3299094140632,
            1524.213323200952,
            1896.6680927139623,
            2690.7997287891626,
            1085.9747995566986,
            963.4617328168138,
            2262.648872569531,
            2570.1266424767746,
            2425.588054703804,
            1546.7157650655931,
            1706.7808762217815,
            1217.2342915477095,
            1050.7845425421015,
            1899.289915722315,
            1970.8053729523836,
            908.0353459730757];
        second = [0.4643628308239365,
            0.3252988371588976,
            0.3631470295755709,
            0.446130834265522,
            0.3214242444539521,
            0.11063528731620541,
            0.23042822059186152,
            0.1709047593783085,
            0.42706750698752927,
            0.3351536961154018,
            0.4035260636408985,
            0.19587442960824586,
            0.4929856483443896,
            0.2579780614000081,
            0.11694738072070524,
            0.35609726433418476,
            0.11837965882392165,
            0.47232086221708003,
            0.406583583241491,
            0.1178440910362034,
            0.12341133509814527,
            0.38110706475738565,
            0.1138821421899749,
            0.23169205847132252,
            0.4716558774680899,
            0.12661806497579173,
            0.12152168123187518,
            0.4829836461460042,
            0.3054121456229284,
            0.20338496176745047,
            0.2377924632419835,
            0.16776352626045082,
            0.20199073492618008,
            0.1456684584930165,
            0.29900831948010875,
            0.3836926960493806,
            0.10619632738413856,
            0.288478225606005,
            0.4596133009237142,
            0.3653260262636574,
            0.10962497680510906,
            0.417066007171352,
            0.49135109765734797,
            0.17913354693400718,
            0.4386201873734181,
            0.13835934972426564,
            0.3747176024564657,
            0.17382810515657177,
            0.1850285501481225,
            0.34510088261118355];
        third = [19.01910306821238,
            13.60874110652084,
            9.107374525961557,
            14.291087693380259,
            17.619350029658104,
            10.971874518595202,
            18.349991576850634,
            16.10854597670349,
            12.50668959597857,
            13.050697457649607,
            13.46608049488603,
            19.4307343413291,
            5.678750895917028,
            11.70676484405828,
            15.171354000378157,
            16.40011280673025,
            13.335445560519121,
            6.235927186674678,
            12.692515669884674,
            14.673796232816054,
            6.688697701055194,
            5.813088470672206,
            14.519616365246629,
            5.637859184527274,
            18.793081560014365,
            15.737215965224816,
            15.285947682373495,
            17.430417184294807,
            15.508333457824898,
            16.894422238811508,
            17.74582432187249,
            10.56887224182887,
            15.241740566592052,
            15.16086192628985,
            8.344900179636843,
            13.889510297752887,
            7.220346338623569,
            12.904745347151188,
            17.595666348727715,
            13.862002882872014,
            11.080483124590163,
            17.036296571608208,
            8.032798887922539,
            18.65067274533991,
            18.181822227408176,
            7.156088473537002,
            6.01435542993725,
            19.748187697790705,
            15.174074793539724,
            13.275233624224564];
        fourth = [0.18602146370130423,
            0.33437339222430484,
            -0.33757311597050554,
            0.3572561579558551,
            -0.530878686444646,
            -0.905122415158139,
            -0.6613553502004152,
            0.2725074757663215,
            -0.6886464445060234,
            -0.5632702922473287,
            0.10584017605802254,
            -0.4772993233510685,
            -0.8062837339364379,
            0.46143762440268654,
            -0.9912272334882077,
            -0.010468453394720356,
            -0.29610708393682383,
            -0.9088261267561721,
            -0.9247487940144272,
            -0.8280218313964145,
            0.8366074499072633,
            0.013008176942032268,
            -0.6728266445383904,
            0.8729638318467905,
            0.26482907624116914,
            0.36849952592517976,
            -0.00837257818753745,
            -0.843316743879841,
            -0.08440750364708016,
            0.7924803325246756,
            -0.24092104983880702,
            0.32728788041296575,
            0.08060345599984498,
            0.5062843417931431,
            -0.94259518284986,
            -0.59839175524715,
            -0.3064557324760475,
            0.39681966277786307,
            0.5262224558213826,
            0.0199224320145448,
            -0.5452691653251263,
            -0.024938945390333256,
            -0.5086457810224996,
            -0.7433233312071312,
            -0.18006388774489013,
            -0.8310548869223471,
            0.49000644697897355,
            0.9243343201117629,
            -0.3916819485995475,
            -0.22814549210875112];
        ropes.push(
            new rope(
                w / 2, h/2,
                first[i],
                second[i],
                third[i]
            )
        );
        randl.push(fourth[i]);
        da.push(0);
    }

    //place for objects in animation
    function draw() {

        if (mouse.x) {
            target.errx = mouse.x - target.x;
            target.erry = mouse.y - target.y;
        } else {
            h_divide_2_min_q = (h / 2 - q - 50) ;
            target.errx =
                w / 2 +
                h_divide_2_min_q *
                Math.cos(t) -
                target.x;
            target.erry =
                h / 2 +
                h_divide_2_min_q *
                Math.sin(t) -
                target.y;
        }

        target.x += target.errx / 10;
        target.y += target.erry / 10;

        t += 0.01;

        for (let i = 0; i < ropes.length; i++) {
            if (randl[i] > 0) {
                da[i] += (1 - randl[i]) / 10;
            } else {
                da[i] += (-1 - randl[i]) / 10;
            }
            ropes[i].update({
                x: target.x +
                    .7 * randl[i] * rl * Math.cos((i * 2 * Math.PI) / ropes.length + da[i]),
                y: target.y +
                    .7 * randl[i] * rl * Math.sin((i * 2 * Math.PI) / ropes.length + da[i])
            });
            if (randl[i] > -0.7) {
                type = "l";
            } else {
                type = "o";
            }
            ropes[i].show(type);
        }
        last_target.x = target.x;
        last_target.y = target.y;
    }

    //mouse position
    canvas.addEventListener(
        "mousemove",
        function(e) {
            last_mouse.x = mouse.x;
            last_mouse.y = mouse.y;

            mouse.x = e.pageX - this.offsetLeft;
            mouse.y = e.pageY - this.offsetTop;
        },
        false
    );

    canvas.addEventListener("mouseleave", function(e) {
        mouse.x = false;
        mouse.y = false;
    });

    //animation frame
    function loop() {
        //console.log("4")
        window.requestAnimFrame(loop);
        c.clearRect(0, 0, w, h);
        draw();
    }

    //window resize
    window.addEventListener("resize", function() {
        (w = canvas.width = window.innerWidth),
        (h = canvas.height = window.innerHeight);
        loop();
    });
    //console.log("5")
    //animation runner
    loop();
    setInterval(loop, 900 / 60);
};

function preloaderfun() {
    var element = document.getElementById("canvas");
    element.remove("canvas");


    var element = document.getElementById("preloader-box");
    element.classList.remove("preloader-text-enter");
    var element = document.getElementById("preloader-box");
    element.remove("preloader-box");


    var element = document.getElementById("Cirle-Enter1");
    element.classList.remove("Cirle-Enter");
    var element = document.getElementById("preloader-text-author");
    element.remove("preloader-text-author");
    var element = document.getElementById("preloader");
    element.classList.remove("spinner-wrapper");
};
